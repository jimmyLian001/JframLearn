<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baofu.cbpayservice.dal.mapper.FiCbPaySettleOrderMapper">

    <resultMap id="BaseResultMap" type="com.baofu.cbpayservice.dal.models.FiCbPaySettleOrderDo">
        <id             column="ID"                     jdbcType="BIGINT"           property="id"/>
        <result         column="MEMBER_ID"              jdbcType="BIGINT"           property="memberId"/>
        <result         column="ORDER_ID"               jdbcType="BIGINT"           property="orderId"/>
        <result         column="MEMBER_TRANS_ID"        jdbcType="VARCHAR"          property="memberTransId"/>
        <result         column="MEMBER_TRANS_DATE"      jdbcType="TIMESTAMP"        property="memberTransDate"/>
        <result         column="ORDER_AMT"              jdbcType="DECIMAL"          property="orderAmt"/>
        <result         column="ORDER_CCY"              jdbcType="CHAR"             property="orderCcy"/>
        <result         column="PAYEE_ID_TYPE"          jdbcType="INTEGER"          property="payeeIdType"/>
        <result         column="PAYEE_ID_NO"            jdbcType="VARCHAR"          property="payeeIdNo"/>
        <result         column="PAYEE_NAME"             jdbcType="VARCHAR"          property="payeeName"/>
        <result         column="PAYEE_ACC_NO"           jdbcType="VARCHAR"          property="payeeAccNo"/>
        <result         column="CREATE_AT"              jdbcType="TIMESTAMP"        property="createAt"/>
        <result         column="CREATE_BY"              jdbcType="VARCHAR"          property="createBy"/>
        <result         column="UPDATE_BY"              jdbcType="VARCHAR"          property="updateBy"/>
        <result         column="UPDATE_AT"              jdbcType="TIMESTAMP"        property="updateAt"/>
        <result         column="REMARKS"                jdbcType="VARCHAR"          property="remarks"/>
        <result         column="BATCH_NO"               jdbcType="BIGINT"           property="batchNo"/>
        <result         column="COMMODITY_INFO"         jdbcType="BIGINT"           property="commodityInfo"/>
    </resultMap>

    <sql id="Base_Column_List">
        ID,
        MEMBER_ID,
        ORDER_ID,
        MEMBER_TRANS_ID,
        MEMBER_TRANS_DATE,
        ORDER_AMT,
        ORDER_CCY,
        PAYEE_ID_TYPE,
        PAYEE_ID_NO,
        PAYEE_NAME,
        PAYEE_ACC_NO,
        CREATE_AT,
        CREATE_BY,
        UPDATE_BY,
        UPDATE_AT,
        REMARKS,
        BATCH_NO
    </sql>

    <!-- 批量新增结汇订单信息 -->
    <insert id="batchInsert" parameterType="java.util.List">
        /*FiCbPaySettleOrderMapper.batchInsert*/
        insert into FI_CBPAY_SETTLE_ORDER (
        MEMBER_ID,
        ORDER_ID,
        MEMBER_TRANS_ID,
        MEMBER_TRANS_DATE,
        ORDER_AMT,
        ORDER_CCY,
        PAYEE_ID_TYPE,
        PAYEE_ID_NO,
        PAYEE_NAME,
        PAYEE_ACC_NO,
        CREATE_AT,
        CREATE_BY,
        UPDATE_BY,
        UPDATE_AT,
        BATCH_NO
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.memberId,jdbcType=BIGINT},
            #{item.orderId,jdbcType=BIGINT},
            #{item.memberTransId,jdbcType=VARCHAR},
            #{item.memberTransDate,jdbcType=TIMESTAMP},
            #{item.orderAmt,jdbcType=DECIMAL},
            #{item.orderCcy,jdbcType=CHAR},
            #{item.payeeIdType,jdbcType=INTEGER},
            #{item.payeeIdNo,jdbcType=VARCHAR},
            #{item.payeeName,jdbcType=VARCHAR},
            #{item.payeeAccNo,jdbcType=VARCHAR},
            NOW(),
            #{item.createBy,jdbcType=VARCHAR},
            #{item.updateBy,jdbcType=VARCHAR},
            NOW(),
            #{item.batchNo,jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <!-- 批量更新结汇订单信息 -->
    <update id="batchUpdateByOrderId">
        /*FiCbPaySettleOrderMapper.updateByKeySelective*/
        update FI_CBPAY_SETTLE_ORDER
        <set>
            <if test="amlStatus != null">
                AML_STATUS = #{amlStatus,jdbcType=INTEGER},
            </if>
            UPDATE_AT = NOW()
        </set>
        where BATCH_NO = #{batchNo,jdbcType=BIGINT}
        <if test="detailsOrderIds != null">
            AND ORDER_ID IN(
            <foreach collection="detailsOrderIds" item="orderId" index="key" separator=",">
                #{orderId,jdbcType=BIGINT}
            </foreach>
            )
        </if>
    </update>

    <!-- 批量更新指定结汇订单信息外的状态 -->
    <update id="batchUpdateByExOrderIds">
        /*FiCbPaySettleOrderMapper.updateByKeySelective*/
        update FI_CBPAY_SETTLE_ORDER
        <set>
            <if test="amlStatus != null">
                AML_STATUS = #{amlStatus,jdbcType=INTEGER},
            </if>
            UPDATE_AT = NOW()
        </set>
        where BATCH_NO = #{batchNo,jdbcType=BIGINT}
        <if test="detailsOrderIds != null">
            AND ORDER_ID NOT IN(
            <foreach collection="detailsOrderIds" item="orderId" index="key" separator=",">
                #{orderId,jdbcType=BIGINT}
            </foreach>
            )
        </if>
    </update>

    <!-- 商户订单号校验 -->
    <select id="selectMerchantTrans" resultType="java.lang.String">
        /*FiCbPayOrderMapper.selectMerchantTrans*/
        SELECT
        MEMBER_TRANS_ID
        FROM
        FI_CBPAY_SETTLE_ORDER T
        WHERE
        T.MEMBER_ID = #{memberId}
        AND
        T.MEMBER_TRANS_ID IN(
        <foreach collection="memberTransIds" item="memberTransId" index="key" separator=",">
            #{memberTransId}
        </foreach>
        )
    </select>

    <!-- 商户订单号校验 -->
    <select id="selectByBatchNo" resultMap="BaseResultMap">
        /*FiCbPayOrderMapper.selectByBatchNo*/
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        FI_CBPAY_SETTLE_ORDER T
        WHERE
        T.BATCH_NO = #{batchNo,jdbcType=BIGINT}
        <if test="amlStatus != null">
            AND AML_STATUS = #{amlStatus,jdbcType=INTEGER}
        </if>
        <if test="detailsOrderIds != null">
            AND ORDER_ID IN(
            <foreach collection="detailsOrderIds" item="orderId" index="key" separator=",">
                #{orderId}
            </foreach>
            )
        </if>
    </select>

    <!-- 根据文件批次查询结汇明细信息 -->
    <select id="selectBySettleInfo" resultMap="BaseResultMap">
        /*FiCbPayOrderMapper.selectBySettleInfo*/
        SELECT
        fcso.MEMBER_ID,
        fcso.ORDER_ID,
        fcso.MEMBER_TRANS_ID,
        fcso.MEMBER_TRANS_DATE,
        fcso.ORDER_AMT,
        fcso.ORDER_CCY,
        fcso.PAYEE_ID_TYPE,
        fcso.PAYEE_ID_NO,
        fcso.PAYEE_NAME,
        fcso.PAYEE_ACC_NO,
        fcso.BATCH_NO,
        fcoi.COMMODITY_NAME AS COMMODITY_INFO
        FROM
        FI_CBPAY_SETTLE_ORDER fcso
        LEFT JOIN FI_CBPAY_ORDER_ITEM fcoi ON fcso.ORDER_ID = fcoi.ORDER_ID
        WHERE fcso.BATCH_NO = #{batchNo,jdbcType=BIGINT}
        GROUP BY fcso.ORDER_ID;

    </select>

    <select id="queryNeedRiskControlOrder" resultType="com.baofu.cbpayservice.dal.models.FiCbPaySettleOrderDo">
        /*FiCbPayOrderMapper.queryNeedRiskControlOrder*/
        SELECT s.MEMBER_ID AS memberId,
        s.ORDER_ID AS orderId,
        s.MEMBER_TRANS_ID AS memberTransId,
        s.MEMBER_TRANS_DATE AS memberTransDate,
        s.ORDER_AMT AS orderAmt,
        s.ORDER_CCY AS orderCcy,
        s.PAYEE_ID_TYPE AS payeeIdType,
        s.PAYEE_ID_NO AS payeeIdNo,
        s.PAYEE_ACC_NO AS payeeAccNo,
        s.PAYEE_NAME AS payeeName,
        fs.FILE_BATCH_NO AS fileBatchNo,
        fa.INCOME_NO AS incomeNo
        FROM BAOFOO_FI.FI_CBPAY_SETTLE_ORDER s
        LEFT JOIN BAOFOO_FI.FI_CBPAY_SETTLE fs ON s.BATCH_NO=fs.FILE_BATCH_NO
        LEFT JOIN BAOFOO_FI.FI_CBPAY_SETTLE_APPLY fa ON fs.ORDER_ID=fa.MATCHING_ORDER_ID
        WHERE s.RISK_FLAG='0' AND s.MEMBER_ID=#{memberId}
        AND s.BATCH_NO=#{batchNo} LIMIT #{settleOrderCount}
    </select>

    <select id="selectByExOrderIds" resultMap="BaseResultMap">
        /*FiCbPayOrderMapper.selectByExOrderIds*/
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        FI_CBPAY_SETTLE_ORDER T
        WHERE
        T.BATCH_NO = #{batchNo,jdbcType=BIGINT}
        <if test="amlStatus != null">
            AND AML_STATUS = #{amlStatus,jdbcType=INTEGER}
        </if>
        <if test="detailsOrderIds != null">
            AND ORDER_ID NOT IN(
            <foreach collection="detailsOrderIds" item="orderId" index="key" separator=",">
                #{orderId}
            </foreach>
            )
        </if>
    </select>

    <!--根据文件批次号统计订单数量-->
    <select id="queryCbPaySettleOrderCountByBatchN0" resultType="java.lang.Long">
        /*FiCbPayOrderMapper.queryCbPaySettleOrderCountByBatchN0*/
        SELECT COUNT(1) FROM BAOFOO_FI.FI_CBPAY_SETTLE_ORDER s WHERE s.BATCH_NO=#{batchNo} AND s.RISK_FLAG='0'
    </select>

    <!--根据文件批次号查询商户号-->
    <select id="queryMemberIdByBatchNo" resultType="java.lang.Long">
        /*FiCbPayOrderMapper.queryMemberIdByBatchNo*/
        SELECT DISTINCT s.MEMBER_ID FROM BAOFOO_FI.FI_CBPAY_SETTLE_ORDER s WHERE s.BATCH_NO=#{batchNo}
    </select>
    <!--查询待风控的结汇订单信息-->
    <select id="queryNeedRiskControlOrderV2" resultType="com.baofu.cbpayservice.dal.models.FiCbPaySettleOrderDo">
        /*FiCbPayOrderMapper.queryNeedRiskControlOrderV2*/
        SELECT s.MEMBER_ID AS memberId,
        s.ORDER_ID AS orderId,
        s.MEMBER_TRANS_ID AS memberTransId,
        s.MEMBER_TRANS_DATE AS memberTransDate,
        s.ORDER_AMT AS orderAmt,
        s.ORDER_CCY AS orderCcy,
        s.PAYEE_ID_TYPE AS payeeIdType,
        s.PAYEE_ID_NO AS payeeIdNo,
        s.PAYEE_ACC_NO AS payeeAccNo,
        s.PAYEE_NAME AS payeeName,
        s.BATCH_NO AS fileBatchNo
        FROM BAOFOO_FI.FI_CBPAY_SETTLE_ORDER s
        WHERE s.RISK_FLAG='0' AND
        (
        <![CDATA[
              (s.CREATE_AT>=#{todayBegin} AND s.CREATE_AT< #{todayEnd})
            ]]>
        <if test="oldBegin != null and oldEnd!= null">
            <![CDATA[
                   OR (s.CREATE_AT>= #{oldBegin} AND s.CREATE_AT< #{oldEnd})
                ]]>
        </if>
        )
        LIMIT #{settleOrderCount}
    </select>

    <!-- 根据汇总订单号查询结汇明细信息 -->
    <select id="querySettleOrderInfo" resultMap="BaseResultMap">
        /*FiCbPayOrderMapper.selectBySettleInfo*/
        SELECT
        fcso.MEMBER_ID,
        fcso.ORDER_ID,
        fcso.MEMBER_TRANS_ID,
        fcso.MEMBER_TRANS_DATE,
        fcso.ORDER_AMT,
        fcso.ORDER_CCY,
        fcso.PAYEE_ID_TYPE,
        fcso.PAYEE_ID_NO,
        fcso.PAYEE_NAME,
        fcso.PAYEE_ACC_NO,
        fcso.BATCH_NO,
        fcoi.COMMODITY_NAME AS COMMODITY_INFO
        FROM
        FI_CBPAY_SETTLE_ORDER fcso
        LEFT JOIN FI_CBPAY_ORDER_ITEM fcoi ON fcso.ORDER_ID = fcoi.ORDER_ID
        WHERE fcso.BATCH_NO IN (
          SELECT FILE_BATCH_NO FROM FI_CBPAY_FILE_UPLOAD T
          WHERE BATCH_NO IN (
            SELECT DETAIL_ID FROM T_PAYEE_RELATION WHERE BATCH_NO = #{batchNo,jdbcType=BIGINT}
          )
        )
        <if test="memberId != null">
            AND MEMBER_ID = #{memberId,jdbcType=BIGINT}
        </if>
        GROUP BY fcso.ORDER_ID;
    </select>
</mapper>