<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baofu.cbpayservice.dal.mapper.FiCbPayOrderMapper">

    <resultMap id="BaseResultMap" type="com.baofu.cbpayservice.dal.models.FiCbPayOrderDo">
        <id column="ID"                         property="id"               jdbcType="BIGINT"/>
        <id column="ORDER_ID"                   property="orderId"          jdbcType="BIGINT"/>
        <result column="MEMBER_ID"              property="memberId"         jdbcType="BIGINT"/>
        <result column="MEMBER_TRANS_ID"        property="memberTransId"    jdbcType="VARCHAR"/>
        <result column="ORDER_MONEY"            property="orderMoney"       jdbcType="DECIMAL"/>
        <result column="ORDER_CCY"              property="orderCcy"         jdbcType="VARCHAR"/>
        <result column="TRANS_MONEY"            property="transMoney"       jdbcType="DECIMAL"/>
        <result column="TRANS_CCY"              property="transCcy"         jdbcType="VARCHAR"/>
        <result column="PRODUCT_ID"             property="productId"        jdbcType="BIGINT"/>
        <result column="FUNCTION_ID"            property="functionId"       jdbcType="BIGINT"/>
        <result column="PAY_ID"                 property="payId"            jdbcType="BIGINT"/>
        <result column="CHANNEL_ID"             property="channelId"        jdbcType="BIGINT"/>
        <result column="PAY_STATUS"             property="payStatus"        jdbcType="VARCHAR"/>
        <result column="ORDER_COMPLETE_TIME"    property="orderCompleteTime" jdbcType="TIMESTAMP"/>
        <result column="TRANS_RATE"             property="transRate"        jdbcType="DECIMAL"/>
        <result column="TERMINAL_ID"            property="terminalId"       jdbcType="BIGINT"/>
        <result column="ORDER_TYPE"             property="orderType"        jdbcType="VARCHAR"/>
        <result column="CREATE_AT"              property="createAt"         jdbcType="TIMESTAMP"/>
        <result column="CREATE_BY"              property="createBy"         jdbcType="VARCHAR"/>
        <result column="UPDATE_AT"              property="updateAt"         jdbcType="TIMESTAMP"/>
        <result column="UPDATE_BY"              property="updateBy"         jdbcType="VARCHAR"/>
        <result column="TRANS_TIME"             property="transTime"        jdbcType="TIMESTAMP"/>
        <result column="REMITTANCE_STATUS"      property="remittanceStatus" jdbcType="VARCHAR"/>
        <result column="BUSINESS_NO"            property="businessNo"       jdbcType="VARCHAR"/>
        <result column="BATCH_NO"               property="batchNo"          jdbcType="VARCHAR"/>
        <result column="BATCH_FILE_ID"          property="batchFileId"      jdbcType="BIGINT"/>
	    <result column="CAREER_TYPE"            property="careerType"       jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="remitDetailResultMap" type="com.baofu.cbpayservice.dal.models.FiCbPayRemittanceDetailV2Do">
        <result column="ORDER_ID"               property="orderId"          jdbcType="BIGINT"/>
        <result column="BANK_CARD_NO"           property="bankCardNo"       jdbcType="VARCHAR"/>
        <result column="ID_CARD_NO"             property="idCardNo"         jdbcType="VARCHAR"/>
        <result column="ID_HOLDER"              property="idHolder"         jdbcType="VARCHAR"/>
        <result column="PAYEE_ID_TYPE"         property="payeeIdType"         jdbcType="INTEGER"/>
        <result column="TRANS_MONEY"            property="transMoney"       jdbcType="DECIMAL"/>
        <result column="COMMODITY_INFO"         property="commodityInfo"    jdbcType="VARCHAR"/>
        <result column="TRANS_TIME"             property="transTime"        jdbcType="TIMESTAMP"/>
        <result column="CAREER_TYPE"            property="careerType"        jdbcType="VARCHAR"/>
        <result column="AML_STATUS"             property="amlStatus"        jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="remitEmailResultMap" type="com.baofu.cbpayservice.dal.models.FiCbPayEmailDetailDo">
        <result column="MEMBER_TRANS_ID"        property="memberTransId"    jdbcType="VARCHAR"/>
        <result column="TRANS_CCY"              property="transCcy"         jdbcType="VARCHAR"/>
        <result column="TRANS_MONEY"            property="transMoney"       jdbcType="DECIMAL"/>
        <result column="TRANS_TIME"             property="transTime"        jdbcType="TIMESTAMP"/>
        <result column="BANK_CARD_NO"           property="bankCardNo"       jdbcType="VARCHAR"/>
        <result column="ID_CARD_NO"             property="idCardNo"         jdbcType="VARCHAR"/>
        <result column="ID_HOLDER"              property="idHolder"         jdbcType="VARCHAR"/>
        <result column="MOBILE"                 property="mobile"           jdbcType="VARCHAR"/>
        <result column="COMMODITY_NAME"         property="commodityName"    jdbcType="VARCHAR"/>
        <result column="COMMODITY_AMOUNT"       property="commodityAmount"  jdbcType="VARCHAR"/>
        <result column="COMMODITY_PRICE"        property="commodityPrice"   jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        ID,
        ORDER_ID,
        MEMBER_ID,
        MEMBER_TRANS_ID,
        ORDER_MONEY,
        ORDER_CCY,
        TRANS_MONEY,
        TRANS_CCY,
        PRODUCT_ID,
        FUNCTION_ID,
        PAY_ID,
        CHANNEL_ID,
        PAY_STATUS,
        ORDER_COMPLETE_TIME,
        TRANS_RATE,
        TERMINAL_ID,
        ORDER_TYPE,
        CREATE_AT,
        CREATE_BY,
        UPDATE_AT,
        UPDATE_BY,
        TRANS_TIME,
        REMITTANCE_STATUS,
        BUSINESS_NO,
        BATCH_NO,
        CAREER_TYPE,
        BATCH_FILE_ID
    </sql>

    <!--跨境人民订单新增-->
    <insert id="insert" parameterType="com.baofu.cbpayservice.dal.models.FiCbPayOrderDo">
        /*FiCbPayOrderMapper.insert*/
        INSERT INTO FI_CBPAY_ORDER (
        ID,
        ORDER_ID,
        MEMBER_ID,
        MEMBER_TRANS_ID,
        ORDER_MONEY,
        ORDER_CCY,
        TRANS_MONEY,
        TRANS_CCY,
        PRODUCT_ID,
        FUNCTION_ID,
        PAY_ID,
        CHANNEL_ID,
        PAY_STATUS,
        ORDER_COMPLETE_TIME,
        TRANS_RATE,
        TERMINAL_ID,
        TRANS_TIME,
        TRANS_FEE,
        ORDER_TYPE,
        CREATE_AT,
        CREATE_BY,
        UPDATE_AT,
        UPDATE_BY,
        BATCH_FILE_ID,
        BUSINESS_NO,
        ACK_STATUS,
        CAREER_TYPE
        ) VALUES (
        #{id,jdbcType=BIGINT},
        #{orderId,jdbcType=BIGINT},
        #{memberId,jdbcType=BIGINT},
        #{memberTransId,jdbcType=VARCHAR},
        #{orderMoney,jdbcType=DECIMAL},
        #{orderCcy,jdbcType=VARCHAR},
        #{transMoney,jdbcType=DECIMAL},
        #{transCcy,jdbcType=VARCHAR},
        #{productId,jdbcType=BIGINT},
        #{functionId,jdbcType=BIGINT},
        #{payId,jdbcType=BIGINT},
        #{channelId,jdbcType=BIGINT},
        #{payStatus,jdbcType=VARCHAR},
        #{orderCompleteTime,jdbcType=TIMESTAMP},
        #{transRate,jdbcType=DECIMAL},
        #{terminalId,jdbcType=BIGINT},
        #{transTime,jdbcType=TIMESTAMP},
        #{transFee,jdbcType=DECIMAL},
        #{orderType,jdbcType=VARCHAR},
        NOW(),
        #{createBy,jdbcType=VARCHAR},
        NOW(),
        #{updateBy,jdbcType=VARCHAR},
        #{batchFileId,jdbcType=VARCHAR},
        #{businessNo,jdbcType=VARCHAR},
        #{ackStatus,jdbcType=INTEGER},
        #{careerType,jdbcType=VARCHAR}
        )
    </insert>

    <!--批量新增跨境人民订单-->
    <insert id="batchInsert" parameterType="java.util.List">
        /*FiCbPayOrderMapper.batchInsert*/
        INSERT INTO FI_CBPAY_ORDER (
        ID,
        ORDER_ID,
        MEMBER_ID,
        MEMBER_TRANS_ID,
        ORDER_MONEY,
        ORDER_CCY,
        TRANS_MONEY,
        TRANS_CCY,
        PRODUCT_ID,
        FUNCTION_ID,
        PAY_ID,
        CHANNEL_ID,
        PAY_STATUS,
        ORDER_COMPLETE_TIME,
        TRANS_RATE,
        TERMINAL_ID,
        TRANS_TIME,
        TRANS_FEE,
        ORDER_TYPE,
        CREATE_AT,
        CREATE_BY,
        UPDATE_AT,
        UPDATE_BY,
        BATCH_FILE_ID,
        BUSINESS_NO,
        ACK_STATUS,
        CAREER_TYPE,
        REMITTANCE_STATUS
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id,jdbcType=BIGINT},
            #{item.orderId,jdbcType=BIGINT},
            #{item.memberId,jdbcType=BIGINT},
            #{item.memberTransId,jdbcType=VARCHAR},
            #{item.orderMoney,jdbcType=DECIMAL},
            #{item.orderCcy,jdbcType=VARCHAR},
            #{item.transMoney,jdbcType=DECIMAL},
            #{item.transCcy,jdbcType=VARCHAR},
            #{item.productId,jdbcType=BIGINT},
            #{item.functionId,jdbcType=BIGINT},
            #{item.payId,jdbcType=BIGINT},
            #{item.channelId,jdbcType=BIGINT},
            #{item.payStatus,jdbcType=VARCHAR},
            #{item.orderCompleteTime,jdbcType=TIMESTAMP},
            #{item.transRate,jdbcType=DECIMAL},
            #{item.terminalId,jdbcType=BIGINT},
            #{item.transTime,jdbcType=TIMESTAMP},
            #{item.transFee,jdbcType=DECIMAL},
            #{item.orderType,jdbcType=VARCHAR},
            NOW(),
            #{item.createBy,jdbcType=VARCHAR},
            NOW(),
            #{item.updateBy,jdbcType=VARCHAR},
            #{item.batchFileId,jdbcType=VARCHAR},
            #{item.businessNo,jdbcType=VARCHAR},
            #{item.ackStatus,jdbcType=INTEGER},
            #{item.careerType,jdbcType=VARCHAR},
            #{item.remittanceStatus,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--跨境人民订单更新-->
    <update id="update" parameterType="com.baofu.cbpayservice.dal.models.FiCbPayOrderDo">
        /*FiCbPayOrderMapper.update*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        <if test="productId != null">
            PRODUCT_ID = #{productId,jdbcType=BIGINT},
        </if>
        <if test="functionId != null">
            FUNCTION_ID = #{functionId,jdbcType=BIGINT},
        </if>
        <if test="payId != null">
            PAY_ID = #{payId,jdbcType=BIGINT},
        </if>
        <if test="channelId != null">
            CHANNEL_ID = #{channelId,jdbcType=BIGINT},
        </if>
        <if test="payStatus != null">
            PAY_STATUS = #{payStatus,jdbcType=VARCHAR},
        </if>
        <if test="orderCompleteTime != null">
            ORDER_COMPLETE_TIME = #{orderCompleteTime,jdbcType=TIMESTAMP},
        </if>
        <if test="transFee != null">
            TRANS_FEE = #{transFee,jdbcType=DECIMAL},
        </if>
        <if test="payStatus != null and payStatus !=''">
            PAY_STATUS = #{payStatus,jdbcType=VARCHAR},
        </if>
        <if test="orderCompleteTime != null">
            ORDER_COMPLETE_TIME=NOW(),
        </if>
        <if test="notifyStatus != null and notifyStatus !=''">
            NOTIFY_STATUS=#{notifyStatus,jdbcType=VARCHAR},
        </if>
        <if test="remittanceStatus != null and remittanceStatus !=''">
            REMITTANCE_STATUS=#{remittanceStatus,jdbcType=VARCHAR},
        </if>
        <if test="adminState != null and adminState !=''">
            ADMIN_CUSTOMS_STATUS=#{adminState,jdbcType=VARCHAR},
        </if>
        UPDATE_AT = NOW(),
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
        WHERE
        ORDER_ID = #{orderId,jdbcType=BIGINT}
    </update>

    <!--跨境人民订单更新-->
    <update id="batchModifyCbPayOrder">
        /*FiCbPayOrderMapper.batchModifyCbPayOrder*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        <if test="remitStatus != null and remitStatus !=''">
            REMITTANCE_STATUS = #{remitStatus,jdbcType=VARCHAR},
        </if>
        <if test="batchNo != null and batchNo !=''">
            BATCH_NO = #{batchNo,jdbcType=VARCHAR},
        </if>
        <if test="amlStatus != null">
            AML_STATUS = #{amlStatus,jdbcType=INTEGER},
        </if>
        UPDATE_AT = NOW(),
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
        WHERE
        ORDER_ID IN (
        <foreach collection="orderIdList" item="orderId" separator=",">
            ${orderId}
        </foreach>
        )
    </update>

    <!--查询订单-->
    <select id="selectOrder" resultMap="BaseResultMap">
        /*FiCbPayOrderMapper.selectOrder*/
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        FI_CBPAY_ORDER
        WHERE
        ORDER_ID = #{orderId,jdbcType=BIGINT}
    </select>

    <!--按商户号和商户订单号查询-->
    <select id="selectOrderByMemberAndTransId" resultMap="BaseResultMap">
        /*FiCbPayOrderMapper.selectOrderByMemberAndTransId*/
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        FI_CBPAY_ORDER
        WHERE
        MEMBER_ID = #{memberId,jdbcType=BIGINT}
        AND
        MEMBER_TRANS_ID = #{memberTransId,jdbcType=VARCHAR}
    </select>

    <!--批量查询订单-->
    <select id="batchQueryOrder" resultType="java.lang.Long">
        /*FiCbPayOrderMapper.batchQueryOrder*/
        SELECT
        ORDER_ID
        FROM
        FI_CBPAY_ORDER
        WHERE
        MEMBER_ID = #{memberId,jdbcType=BIGINT}
        AND
        BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        AND
        AML_STATUS in (0,1)
    </select>

    <!-- 根据文件批次ID代报关订单信息 -->
    <select id="sumSuccessAmt" resultType="java.math.BigDecimal">
        /*FiCbPayOrderMapper.sumSuccessAmt*/
        SELECT
        SUM(TRANS_MONEY)
        FROM
        FI_CBPAY_ORDER
        WHERE
        BATCH_FILE_ID = #{batchFileId}
        AND
        MEMBER_ID = #{memberId}
        AND
        AML_STATUS in (0,1)
    </select>

    <!--跨境订单更新汇款状态-->
    <update id="updateCbPayOrderByBatchNo">
        /*FiCbPayOrderMapper.updateCbPayOrderByBatchNo*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        REMITTANCE_STATUS = #{remittanceStatus,jdbcType=VARCHAR},
        UPDATE_AT = NOW(),
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
        WHERE
        BATCH_NO = #{batchNo,jdbcType=VARCHAR}
    </update>

    <!--跨境订单更新反洗钱状态-->
    <update id="updateCbPayOrderByFileBatchId">
        /*FiCbPayOrderMapper.updateCbPayOrderByFileBatchId*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        AML_STATUS = #{amlStatus,jdbcType=INTEGER},
        UPDATE_AT = NOW(),
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
        WHERE
        BATCH_FILE_ID = #{fileBatchId,jdbcType=BIGINT}
        AND AML_STATUS != 2
    </update>

    <!--商户订单号校验-->
    <select id="selectMerchantTrans" resultType="java.lang.String">

        /*FiCbPayOrderMapper.selectMerchantTrans*/
        SELECT
        MEMBER_TRANS_ID
        FROM
        BAOFOO_FI.FI_CBPAY_ORDER T
        WHERE
        T.MEMBER_ID = #{memberId}
        AND
        T.MEMBER_TRANS_ID IN(
        <foreach collection="memberTransIds" item="memberTransId" index="key" separator=",">
            #{memberTransId}
        </foreach>
        )

    </select>

    <!--查询汇款明细-->
    <select id="queryRemittanceDetail" resultMap="remitDetailResultMap">
        /*FiCbPayOrderMapper.queryRemittanceDetail*/
        SELECT
        f1.ORDER_ID,
        f1.TRANS_MONEY,
        f1.TRANS_TIME,
        f2.BANK_CARD_NO,
        f2.ID_CARD_NO,
        f2.ID_HOLDER,
        fcfu.CAREER_TYPE,
        group_concat(
        f3.COMMODITY_NAME,',',
        f3.COMMODITY_AMOUNT,',',
        f3.COMMODITY_PRICE SEPARATOR ';'
        ) as COMMODITY_INFO
        FROM
        FI_CBPAY_ORDER f1
        LEFT JOIN FI_CBPAY_ORDER_ADDITION f2 ON f1.ORDER_ID = f2.ORDER_ID
        LEFT JOIN FI_CBPAY_ORDER_ITEM f3 ON f1.ORDER_ID = f3.ORDER_ID
        LEFT JOIN FI_CBPAY_FILE_UPLOAD fcfu ON f1.BATCH_FILE_ID = fcfu.FILE_BATCH_NO
        WHERE f1.AML_STATUS IN (0,1)
        <if test="batchNo != null and batchNo != ''">
            AND f1.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>
        <if test="batchFileId != null and batchFileId != ''">
            AND f1.BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        </if>

        GROUP BY f1.ORDER_ID
    </select>

    <!--查询需要风控的订单信息  wdj-->
    <select id="queryNeedRiskControlOrder" resultMap="BaseResultMap">
        /*FiCbPayOrderMapper.queryNeedRiskControlOrder*/
        SELECT
        <include refid="Base_Column_List"/>
        FROM BAOFOO_FI.FI_CBPAY_ORDER fo
        WHERE fo.PAY_ID='0' AND fo.MEMBER_ID=#{memberId}
        AND fo.BATCH_NO=#{batchNo} LIMIT #{orderCount}
    </select>

    <!-- 批量更新跨境人民订单确认状态-->
    <update id="batchUpdateCbPayOrder">
        /*FiCbPayOrderMapper.batchModifyCbPayOrder*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        ACK_STATUS = #{ackStatus,jdbcType=VARCHAR},
        BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT},
        UPDATE_AT = NOW()
        WHERE
        MEMBER_ID = #{memberId, jdbcType=BIGINT}
        AND
        REMITTANCE_STATUS='INIT'
        AND
        PAY_STATUS='TRUE'
        AND
        ACK_STATUS = 2
        AND
        ORDER_ID IN (
        <foreach collection="orderIdList" item="orderId" separator=",">
            ${orderId}
        </foreach>
        )
    </update>

    <!-- 根据文件批次统计总金额 -->
    <select id="sumOrderTotalAmt" resultType="java.math.BigDecimal">
        /*FiCbPayOrderMapper.sumOrderTotalAmt*/
        SELECT
        SUM(TRANS_MONEY)
        FROM
        FI_CBPAY_ORDER
        WHERE
        BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        AND
        REMITTANCE_STATUS='INIT'
        AND
        PAY_STATUS='TRUE'
        AND
        ACK_STATUS = 1
    </select>

    <!-- 根据orderId集合查询 -->
    <select id="queryByOrderId" resultType="java.lang.Long">
        /*FiCbPayOrderMapper.queryByOrderId*/
        SELECT
        ORDER_ID
        FROM
        FI_CBPAY_ORDER
        WHERE
        MEMBER_ID = #{memberId, jdbcType=BIGINT}
        AND
        ACK_STATUS = 2
        AND
        REMITTANCE_STATUS='INIT'
        AND
        PAY_STATUS='TRUE'
        AND
        ORDER_ID IN (
        <foreach collection="orderIdList" item="orderId" separator=",">
            ${orderId}
        </foreach>
        )
    </select>

    <!--根据时间查询订单信息-->
    <select id="queryOrderByTime" resultType="com.baofu.cbpayservice.dal.models.FiCbPayOrderSumDo">
        SELECT
        SUM(TRANS_MONEY) AS transMoney,
        COUNT(1) AS count
        FROM FI_CBPAY_ORDER
        WHERE REMITTANCE_STATUS='INIT'
        AND MEMBER_ID=#{memberId}
        AND ACK_STATUS=2
        AND PAY_STATUS='TRUE'
        <![CDATA[
            AND  CREATE_AT >= DATE_FORMAT(#{beginTime},'%Y-%c-%d %H:%i:%S')
            AND  CREATE_AT <= DATE_FORMAT(#{endTime},'%Y-%c-%d %H:%i:%S')
        ]]>
    </select>

    <!--跨境人民订单更新-->
    <update id="updateCbPayOrderByTime">
        /*FiCbPayOrderMapper.updateCbPayOrderByTime*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        ACK_STATUS=1,
        BATCH_FILE_ID = #{fileBatchNo,jdbcType=BIGINT},
        UPDATE_AT = NOW(),
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
        WHERE REMITTANCE_STATUS='INIT'
        AND MEMBER_ID=#{memberId}
        AND ACK_STATUS=2
        AND PAY_STATUS='TRUE'
        <![CDATA[
            AND  CREATE_AT >= DATE_FORMAT(#{beginTime},'%Y-%c-%d %H:%i:%S')
            AND  CREATE_AT <= DATE_FORMAT(#{endTime},'%Y-%c-%d %H:%i:%S')
        ]]>
    </update>

    <!--查询汇款明细-->
    <select id="queryEmailDetail" resultMap="remitEmailResultMap">
        /*FiCbPayOrderMapper.queryEmailDetail*/
        SELECT
        f1.MEMBER_TRANS_ID,
        f1.TRANS_CCY,
        f1.TRANS_MONEY,
        f1.TRANS_TIME,
        f2.BANK_CARD_NO,
        f2.ID_CARD_NO,
        f2.ID_HOLDER,
        f2.MOBILE,
        group_concat(
        f3.COMMODITY_NAME SEPARATOR ';'
        ) as COMMODITY_NAME,
        group_concat(
        f3.COMMODITY_AMOUNT SEPARATOR ';'
        ) as COMMODITY_AMOUNT,
        group_concat(
        f3.COMMODITY_PRICE SEPARATOR ';'
        ) as COMMODITY_PRICE
        FROM
        FI_CBPAY_ORDER f1
        LEFT JOIN FI_CBPAY_ORDER_ADDITION f2 ON f1.ORDER_ID = f2.ORDER_ID
        LEFT JOIN FI_CBPAY_ORDER_ITEM f3 ON f1.ORDER_ID = f3.ORDER_ID
        WHERE
        f1.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        GROUP BY f1.ORDER_ID
    </select>

    <!--根据时间查询订单数量-->
    <select id="queryCbPayOrderCount" resultType="java.lang.Long">
        /*FiCbPayOrderMapper.queryCbPayOrderCount*/
        SELECT
        COUNT(*)
        FROM FI_CBPAY_ORDER
        WHERE MEMBER_ID=#{memberId}
        AND REMITTANCE_STATUS='INIT'
        AND ACK_STATUS=2
        AND PAY_STATUS='TRUE'
        <![CDATA[
            AND  CREATE_AT >= DATE_FORMAT(#{beginTime},'%Y-%c-%d %H:%i:%S')
            AND  CREATE_AT <= DATE_FORMAT(#{endTime},'%Y-%c-%d %H:%i:%S')
        ]]>
    </select>
    <!--更新订单状态为未确认状态-->
    <update id="updateAckStausByBatchNo" parameterType="com.baofu.cbpayservice.dal.models.FiCbPayOrderDo">
        /*FiCbPayOrderMapper.updateAckStausByBatchNo*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        ACK_STATUS=2,
        UPDATE_AT = NOW(),
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
        WHERE
        BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        AND
        MEMBER_ID = #{memberId, jdbcType=BIGINT}
    </update>

    <!--查询汇款明细-->
    <select id="queryOrderDetail" resultMap="remitDetailResultMap">
        /*FiCbPayOrderMapper.queryOrderDetail*/
        SELECT
        f1.ORDER_ID,
        f1.TRANS_MONEY,
        f1.TRANS_TIME,
        f1.AML_STATUS,
        f2.BANK_CARD_NO,
        f2.ID_CARD_NO,
        f2.ID_HOLDER,
        f2.PAYEE_ID_TYPE,
        fcfu.CAREER_TYPE,
        group_concat(
        f3.COMMODITY_NAME,',',
        f3.COMMODITY_AMOUNT,',',
        f3.COMMODITY_PRICE SEPARATOR ';'
        ) as COMMODITY_INFO
        FROM
        FI_CBPAY_ORDER f1
        LEFT JOIN FI_CBPAY_ORDER_ADDITION f2 ON f1.ORDER_ID = f2.ORDER_ID
        LEFT JOIN FI_CBPAY_ORDER_ITEM f3 ON f1.ORDER_ID = f3.ORDER_ID
        LEFT JOIN FI_CBPAY_FILE_UPLOAD fcfu ON f1.BATCH_FILE_ID = fcfu.FILE_BATCH_NO
        WHERE
        f1.BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        <if test="amlStatusList != null">
            AND
            f1.AML_STATUS IN
            <foreach collection="amlStatusList" item="amlStatus" index="index" open="(" close=")" separator=",">
                #{amlStatus,jdbcType=INTEGER}
            </foreach>
        </if>
        GROUP BY f1.ORDER_ID
    </select>

    <!--查询汇款明细 机票-->
    <select id="queryOrderTicketsDetail" resultMap="remitDetailResultMap">
        /*FiCbPayOrderMapper.queryOrderTicketsDetail*/
        SELECT
        f1.ORDER_ID,
        f1.TRANS_MONEY,
        f1.TRANS_TIME,
        f1.AML_STATUS,
        f2.BANK_CARD_NO,
        f2.ID_CARD_NO,
        f2.ID_HOLDER,
        f2.PAYEE_ID_TYPE,
        fcfu.CAREER_TYPE,
        group_concat(
        f3.FLIGHT_NUMBER,',',
        f3.ADDRESS SEPARATOR ';'
        ) as COMMODITY_INFO
        FROM
        FI_CBPAY_ORDER f1
        LEFT JOIN FI_CBPAY_ORDER_ADDITION f2 ON f1.ORDER_ID = f2.ORDER_ID
        LEFT JOIN FI_CBPAY_ORDER_TICKETS f3 ON f1.ORDER_ID = f3.ORDER_ID
        LEFT JOIN FI_CBPAY_FILE_UPLOAD fcfu ON f1.BATCH_FILE_ID = fcfu.FILE_BATCH_NO
        WHERE
        f1.BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        <if test="amlStatusList != null">
            AND
            f1.AML_STATUS IN
            <foreach collection="amlStatusList" item="amlStatus" index="index" open="(" close=")" separator=",">
                #{amlStatus,jdbcType=INTEGER}
            </foreach>
        </if>
        GROUP BY f1.ORDER_ID
    </select>
    <!--查询汇款明细 留学-->
    <select id="queryOrderStudyAbroadDetail" resultMap="remitDetailResultMap">
        /*FiCbPayOrderMapper.queryOrderStudyAbroadDetail*/
        SELECT
        f1.ORDER_ID,
        f1.TRANS_MONEY,
        f1.TRANS_TIME,
        f1.AML_STATUS,
        f2.BANK_CARD_NO,
        f2.ID_CARD_NO,
        f2.ID_HOLDER,
        f2.PAYEE_ID_TYPE,
        fcfu.CAREER_TYPE,
        group_concat(
        f3.SCHOOL_NAME,',',
        f3.STUDENT_NAME,',',
        f3.SCHOOL_COUNTRY_CODE SEPARATOR ';'
        ) as COMMODITY_INFO
        FROM
        FI_CBPAY_ORDER f1
        LEFT JOIN FI_CBPAY_ORDER_ADDITION f2 ON f1.ORDER_ID = f2.ORDER_ID
        LEFT JOIN FI_CBPAY_ORDER_STUDY_ABROAD f3 ON f1.ORDER_ID = f3.ORDER_ID
        LEFT JOIN FI_CBPAY_FILE_UPLOAD fcfu ON f1.BATCH_FILE_ID = fcfu.FILE_BATCH_NO
        WHERE
        f1.BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        <if test="amlStatusList != null">
            AND
            f1.AML_STATUS IN
            <foreach collection="amlStatusList" item="amlStatus" index="index" open="(" close=")" separator=",">
                #{amlStatus,jdbcType=INTEGER}
            </foreach>
        </if>
        GROUP BY f1.ORDER_ID
    </select>
    <!--查询汇款明细 酒店-->
    <select id="queryOrderHotelDetail" resultMap="remitDetailResultMap">
        /*FiCbPayOrderMapper.queryOrderHotelDetail*/
        SELECT
        f1.ORDER_ID,
        f1.TRANS_MONEY,
        f1.TRANS_TIME,
        f1.AML_STATUS,
        f2.BANK_CARD_NO,
        f2.ID_CARD_NO,
        f2.ID_HOLDER,
        f2.PAYEE_ID_TYPE,
        fcfu.CAREER_TYPE,
        group_concat(
        f3.HOTEL_NAME,',',
        f3.NIGHT_COUNT,',',
        f3.HOTEL_COUNTRY_CODE SEPARATOR ';'
        ) as COMMODITY_INFO
        FROM
        FI_CBPAY_ORDER f1
        LEFT JOIN FI_CBPAY_ORDER_ADDITION f2 ON f1.ORDER_ID = f2.ORDER_ID
        LEFT JOIN FI_CBPAY_ORDER_HOTEL f3 ON f1.ORDER_ID = f3.ORDER_ID
        LEFT JOIN FI_CBPAY_FILE_UPLOAD fcfu ON f1.BATCH_FILE_ID = fcfu.FILE_BATCH_NO
        WHERE
        f1.BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        <if test="amlStatusList != null">
            AND
            f1.AML_STATUS IN
            <foreach collection="amlStatusList" item="amlStatus" index="index" open="(" close=")" separator=",">
                #{amlStatus,jdbcType=INTEGER}
            </foreach>
        </if>
        GROUP BY f1.ORDER_ID
    </select>
    <!--查询汇款明细 旅游-->
    <select id="queryOrderTourismDetail" resultMap="remitDetailResultMap">
        /*FiCbPayOrderMapper.queryOrderDetail*/
        SELECT
        f1.ORDER_ID,
        f1.TRANS_MONEY,
        f1.TRANS_TIME,
        f1.AML_STATUS,
        f2.BANK_CARD_NO,
        f2.ID_CARD_NO,
        f2.ID_HOLDER,
        f2.PAYEE_ID_TYPE,
        fcfu.CAREER_TYPE,
        group_concat(
        f3.TRAVEL_AGENCY_NAME,',',
        f3.TOUR_DAYS,',',
        f3.TRAVEL_COUNTRY_CODE SEPARATOR ';'
        ) as COMMODITY_INFO
        FROM
        FI_CBPAY_ORDER f1
        LEFT JOIN FI_CBPAY_ORDER_ADDITION f2 ON f1.ORDER_ID = f2.ORDER_ID
        LEFT JOIN FI_CBPAY_ORDER_TOURISM f3 ON f1.ORDER_ID = f3.ORDER_ID
        LEFT JOIN FI_CBPAY_FILE_UPLOAD fcfu ON f1.BATCH_FILE_ID = fcfu.FILE_BATCH_NO
        WHERE
        f1.BATCH_FILE_ID = #{batchFileId,jdbcType=BIGINT}
        <if test="amlStatusList != null">
            AND
            f1.AML_STATUS IN
            <foreach collection="amlStatusList" item="amlStatus" index="index" open="(" close=")" separator=",">
                #{amlStatus,jdbcType=INTEGER}
            </foreach>
        </if>
        GROUP BY f1.ORDER_ID
    </select>

    <!--根据汇款批次号统计记录数-->
    <select id="queryCbPayOrderCountByBatchN0" resultType="java.lang.Long">
        /*FiCbPayOrderMapper.queryCbPayOrderCountByBatchN0*/
        SELECT COUNT(1) FROM BAOFOO_FI.FI_CBPAY_ORDER fo WHERE fo.PAY_ID='0' AND fo.BATCH_NO=#{batchNo}
    </select>
    <!--根据汇款批次号查询出商户号-->
    <select id="queryMemberNoByBatchNo" resultType="java.lang.Long">
        SELECT DISTINCT fo.MEMBER_ID FROM BAOFOO_FI.FI_CBPAY_ORDER fo WHERE fo.BATCH_NO=#{batchNo}
    </select>

    <select id="queryIncomeNoByOrderId" resultType="java.lang.String">
        SELECT fa.INCOME_NO FROM BAOFOO_FI.FI_CBPAY_SETTLE_ORDER fo
        LEFT JOIN BAOFOO_FI.FI_CBPAY_SETTLE fs ON fo.BATCH_NO=fs.FILE_BATCH_NO
        LEFT JOIN BAOFOO_FI.FI_CBPAY_SETTLE_APPLY fa ON fa.MATCHING_ORDER_ID=fs.ORDER_ID
        WHERE fo.ORDER_ID=#{orderId}
    </select>

    <!--根据文件批次查询反洗钱状态订单-->
    <select id="queryAmlDetailByBatchFileNo" resultMap="remitDetailResultMap">
        /*FiCbPayOrderMapper.queryAmlDetail*/
        SELECT
        f1.ORDER_ID,
        f1.TRANS_MONEY
        FROM
        FI_CBPAY_ORDER f1
        WHERE 1=1
        <if test="fileBatchNo != null">
            AND f1.BATCH_FILE_ID = #{fileBatchNo,jdbcType=BIGINT}
        </if>
        <if test="amlStatus != null">
            AND f1.AML_STATUS = #{amlStatus,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 剩余订单可用金额 -->
    <select id="countOrderAmountByMemberId" resultType="java.math.BigDecimal">
        SELECT
          IFNULL(SUM(fo.ORDER_MONEY),0)
        FROM
          BAOFOO_FI.FI_CBPAY_ORDER fo
        WHERE
            <![CDATA[
              fo.CREATE_AT >= '2017-10-31 00:00:00'
              AND fo.CREATE_AT < NOW()
            ]]>
            AND fo.MEMBER_ID = #{memberId,jdbcType=BIGINT}
            AND fo.ORDER_TYPE='BRO'
            AND fo.REMITTANCE_STATUS = 'INIT'
            AND fo.PAY_STATUS = 'TRUE'
    </select>

    <!-- 查询可用订单 -->
    <select id="selectBatchRemitOrder" resultType="com.baofu.order.pick.model.Order">
        SELECT 
          fo.ORDER_ID orderId,
          fo.ORDER_MONEY orderAmt,
          fo.CREATE_AT orderDate
        FROM
          BAOFOO_FI.FI_CBPAY_ORDER fo 
        WHERE
           <![CDATA[
            fo.CREATE_AT >= '2017-10-31 00:00:00'
            AND fo.CREATE_AT <= NOW()
           ]]>
          AND fo.MEMBER_ID = #{memberId,jdbcType=BIGINT}
          AND fo.ORDER_TYPE = 'BRO'
          AND fo.REMITTANCE_STATUS = 'INIT' 
          AND fo.PAY_STATUS = 'TRUE'

    </select>

    <!-- 批量汇款更新跨境订单信息 -->
    <update id="batchRemitUpdate">
        /*FiCbPayOrderMapper.batchRemitUpdate*/
        UPDATE
          FI_CBPAY_ORDER
        SET
          BATCH_FILE_ID = #{fileBatchNo,jdbcType=BIGINT},
          REMITTANCE_STATUS = 'PROCESSING',
          UPDATE_AT = NOW()
        WHERE
            ORDER_ID IN
            <foreach collection="orderIdList" item="orderId" index="index" open="(" close=")" separator=",">
                #{orderId,jdbcType=BIGINT}
            </foreach>
          AND MEMBER_ID = #{memberId, jdbcType=BIGINT}
    </update>

    <!--跨境订单更新汇款状态-->
    <update id="updateOrderByFileBatchNo">
        /*FiCbPayOrderMapper.updateOrderByFileBatchNo*/
        UPDATE
        FI_CBPAY_ORDER
        SET
        REMITTANCE_STATUS = #{status,jdbcType=VARCHAR},
        UPDATE_AT = NOW()
        WHERE
        BATCH_FILE_ID = #{fileBatchNo,jdbcType=BIGINT}
    </update>
</mapper>