<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baofu.cbpayservice.dal.mapper.FiCbPayMemberRateMapper">

    <resultMap id="BaseResultMap" type="com.baofu.cbpayservice.dal.models.FiCbPayMemberRateDo">
        <id     column="ID"                 jdbcType="BIGINT"           property="id"/>
        <result column="RECORD_ID"          jdbcType="BIGINT"           property="recordId"/>
        <result column="MEMBER_ID"          jdbcType="BIGINT"           property="memberId"/>
        <result column="CCY"                jdbcType="CHAR"             property="ccy"/>
        <result column="MEMBER_RATE"        jdbcType="DECIMAL"          property="memberRate"/>
        <result column="CREATE_AT"          jdbcType="TIMESTAMP"        property="createAt"/>
        <result column="CREATE_BY"          jdbcType="VARCHAR"          property="createBy"/>
        <result column="UPDATE_AT"          jdbcType="TIMESTAMP"        property="updateAt"/>
        <result column="UPDATE_BY"          jdbcType="VARCHAR"          property="updateBy"/>
        <result column="STATUS"             jdbcType="INTEGER"          property="status"/>
        <result column="BUSINESS_TYPE"      jdbcType="INTEGER"          property="businessType"/>
        <result column="RATE_SET_TYPE"      jdbcType="INTEGER"          property="rateSetType"/>
        <result column="MEMBER_RATE_BP"     jdbcType="BIGINT"           property="memberRateBp"/>
        <result column="BEGIN_DATE"         jdbcType="TIMESTAMP"        property="beginDate"/>
        <result column="END_DATE"           jdbcType="TIMESTAMP"        property="endDate"/>
    </resultMap>

    <sql id="Base_Column_List">
        ID,
        RECORD_ID,
        MEMBER_ID,
        CCY,
        MEMBER_RATE,
        CREATE_AT,
        CREATE_BY,
        UPDATE_AT,
        UPDATE_BY,
        STATUS
        ,BUSINESS_TYPE
        ,RATE_SET_TYPE
        ,MEMBER_RATE_BP
        ,BEGIN_DATE
        ,END_DATE
    </sql>

    <!-- 根据recordId查询 -->
    <select id="selectByRecordId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        /*FiCbPayMemberRateMapper.queryByRecordId*/
        select
        <include refid="Base_Column_List"/>
        from FI_CBPAY_MEMBER_RATE
        where RECORD_ID = #{recordId,jdbcType=BIGINT}
    </select>

    <!-- 添加商户定额外币浮动汇率 -->
    <insert id="addMemberRateDo" parameterType="com.baofu.cbpayservice.dal.models.FiCbPayMemberRateDo">
        /*FiCbPayMemberRateMapper.addMemberRateDo*/
        INSERT INTO FI_CBPAY_MEMBER_RATE (
        RECORD_ID,
        MEMBER_ID,
        CCY,
        MEMBER_RATE,
        CREATE_AT,
        CREATE_BY,
        UPDATE_AT,
        UPDATE_BY,
        STATUS
        ,BUSINESS_TYPE
        ,RATE_SET_TYPE
        ,MEMBER_RATE_BP
        ,BEGIN_DATE
        ,END_DATE
        ) VALUES (
        #{recordId,jdbcType=BIGINT},
        #{memberId,jdbcType=BIGINT},
        #{ccy,jdbcType=CHAR},
        #{memberRate,jdbcType=DECIMAL},
        NOW(),
        #{createBy,jdbcType=VARCHAR},
        NOW(),
        #{updateBy,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER}
        ,#{businessType,jdbcType=INTEGER}
        ,#{rateSetType,jdbcType=INTEGER}
        ,#{memberRateBp,jdbcType=BIGINT}
        ,#{beginDate,jdbcType=TIMESTAMP}
        ,#{endDate,jdbcType=TIMESTAMP}
        )
    </insert>

    <!-- 根据记录数更新 -->
    <update id="updateByRecordId" parameterType="com.baofu.cbpayservice.dal.models.FiCbPayMemberRateDo">
        /*FiCbPayMemberRateMapper.updateByRecordId*/
        update FI_CBPAY_MEMBER_RATE
        <set>
            <if test="memberId != null">
                MEMBER_ID = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="ccy != null">
                CCY = #{ccy,jdbcType=CHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=INTEGER},
            </if>
            <if test="updateBy != null">
                UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="businessType != null">
                BUSINESS_TYPE = #{businessType,jdbcType=INTEGER},
            </if>
            <if test="rateSetType != null">
                RATE_SET_TYPE = #{rateSetType,jdbcType=INTEGER},
            </if>
            <if test="beginDate != null">
                BEGIN_DATE = #{beginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                END_DATE = #{endDate,jdbcType=TIMESTAMP},
            </if>
            MEMBER_RATE = #{memberRate,jdbcType=DECIMAL},
            MEMBER_RATE_BP = #{memberRateBp,jdbcType=BIGINT},
            UPDATE_AT = NOW()
        </set>
        where RECORD_ID = #{recordId,jdbcType=BIGINT}
    </update>

    <!-- 获取商户浮动汇率bp-->
    <select id="selectMemberRateOne" parameterType="com.baofu.cbpayservice.dal.models.FiCbPayMemberRateDo"
            resultMap="BaseResultMap">
        /** FiCbPayMemberRateMapper.selectMemberRateOne 获取商户浮动汇率bp**/

        SELECT
        <include refid="Base_Column_List"/>
        FROM
        FI_CBPAY_MEMBER_RATE
        WHERE
        MEMBER_ID= #{memberId,jdbcType=BIGINT}
        AND
        CCY = #{ccy,jdbcType=CHAR}
        AND
        BUSINESS_TYPE =#{businessType,jdbcType=BIGINT}
        AND
        STATUS=1
        <![CDATA[
        AND
        BEGIN_DATE <= NOW()
        AND
        END_DATE>=NOW()
        ]]>
        ORDER BY BEGIN_DATE DESC LIMIT 1
    </select>

    <select id="selectMemberRateList" resultMap="BaseResultMap">
        SELECT DISTINCT
        <include refid="Base_Column_List"/>
        from FI_CBPAY_MEMBER_RATE T1,(
        SELECT DISTINCT T.`MEMBER_ID` AS MEM_ID,T.`CCY` AS MEM_CCY,MAX(T.`BEGIN_DATE`) AS
        MEM_BEGIN_DATE,T.`RATE_SET_TYPE` AS MEM_RATE_SET_TYPE,T.`BUSINESS_TYPE` AS MEM_BUSINESS_TYPE
        FROM FI_CBPAY_MEMBER_RATE T
        WHERE NOW() BETWEEN T.`BEGIN_DATE` AND T.`END_DATE`
        GROUP BY T.`MEMBER_ID`,T.`CCY`,T.`BUSINESS_TYPE`,T.`RATE_SET_TYPE`
        ) T2
        where T1.`MEMBER_ID` = T2.`MEM_ID`
        AND T1.`CCY` = #{ccy,jdbcType=CHAR}
        AND T1.`CCY` = T2.`MEM_CCY`
        AND T1.`MEMBER_ID` = #{memberId,jdbcType=BIGINT}
        AND NOW() BETWEEN T1.`BEGIN_DATE` AND T1.`END_DATE`
        AND T1.`BEGIN_DATE` = T2.`MEM_BEGIN_DATE`
        AND T1.`RATE_SET_TYPE` = T2.`MEM_RATE_SET_TYPE`
        AND T1.`BUSINESS_TYPE` = T2.`MEM_BUSINESS_TYPE`
        ORDER BY UPDATE_AT ASC
    </select>
</mapper>