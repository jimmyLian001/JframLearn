package com.baofu.international.global.account.core.dal.mapper;

import com.baofu.international.global.account.core.dal.model.UserAccInfoReqDo;
import com.baofu.international.global.account.core.dal.model.UserPayeeAccountDo;
import com.baofu.international.global.account.core.dal.model.UserStoreInfoRespDo;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface UserAccountMapper {

    /**
     * 根据用户号和银行账户号查询收款账户信息
     *
     * @param bankAccNo 银行账户
     * @param userNo    用户编号
     * @return 返回收款账户信息
     */
    List<UserPayeeAccountDo> selectPayeeAccount(@Param("userNo") Long userNo, @Param("bankAccNo") String bankAccNo);

    /**
     * 根据用户号和银行账户号币种查询收款账户信息
     *
     * @param bankAccNo 银行账户
     * @param userNo    用户编号
     * @param ccy       币种
     * @return 返回收款账户信息
     */
    List<UserPayeeAccountDo> selectPayeeAccountByCcy(@Param("userNo") Long userNo, @Param("bankAccNo") String bankAccNo, @Param("ccy") String ccy);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_USER_PAYEE_ACCOUNT
     *
     * @param record record
     * @mbg.generated
     */
    int insert(UserPayeeAccountDo record);

    /**
     * 根据walletid更新钱包账号和路由账号
     *
     * @param record record
     * @return
     */
    int updateAccountByAccountNo(UserPayeeAccountDo record);

    /**
     * 查询用户有效的子账户信息
     *
     * @param userPayeeAccountDo 用户账户信息
     * @return 账户信息
     */
    UserPayeeAccountDo selectUserAccountInfo(UserPayeeAccountDo userPayeeAccountDo);

    /**
     * 根据账户号和币种信息查询账户
     *
     * @param userAccInfoReqDo 账户信息
     * @return 账户集合
     */
    List<UserStoreInfoRespDo> queryUserStoreByCcy(UserAccInfoReqDo userAccInfoReqDo);


    /**
     * 根据钱包id查询账户信息
     *
     * @param accountNo
     * @return 账户信息
     */
    UserPayeeAccountDo selectUserAccountAccNo(Long accountNo);

    /**
     * 根据店铺编号和银行卡号查询账户信息
     *
     * @param sellerId   店铺编号
     * @param bankCardNo 银行卡号
     * @return 返回结果
     */
    UserPayeeAccountDo selectUserAccount(@Param("sellerId") String sellerId,
                                         @Param("bankCardNo") String bankCardNo);

}